60 = liczba stanow
ABCDEFGHIJKLMNOPRSTUVXWQZabcdefghijqvxzpklmnow0123456789()-%
27 = liczba liter
0123456789*=&abcdefghijkx-.
777 = liczba regul
0A->aBR  <- Pierwszy stan A, zajmuje sie glownie odsylaniem do stanow kopiujacych znak,
1A->bCR		kazdy znak ma swoj stan ktory pozniej przesuwa sie na sam koniec by przekopiowac go,
2A->cDR     -----------------
3A->dER		zamienia kazda cyfre i znak '*' na litere by nie zostalo znow skopiowane to samo
4A->eFR
5A->fGR
6A->gHR
7A->hIR		 
8A->iJR		
9A->jKR		 --kazdy ze stanow "kopiujacych" przechodzi do stanu M po wstawieniu znaku na ostatnie puste miejsce
*A->kLR		\/
=A->=NL
0B->0BR -------------
1B->1BR kopiuj '0'
2B->2BR
3B->3BR
4B->4BR
5B->5BR
6B->6BR
7B->7BR
8B->8BR
9B->9BR
*B->*BR
=B->=BR
.B->0ML
0C->0CR -------------
1C->1CR kopiuj '1'
2C->2CR
3C->3CR
4C->4CR
5C->5CR
6C->6CR
7C->7CR
8C->8CR
9C->9CR
*C->*CR
=C->=CR
.C->1ML
0D->0DR -------------
1D->1DR kopiuj '2'
2D->2DR
3D->3DR
4D->4DR
5D->5DR
6D->6DR
7D->7DR
8D->8DR
9D->9DR
*D->*DR
=D->=DR
.D->2ML
0E->0ER -------------
1E->1ER kopiuj '3'
2E->2ER
3E->3ER
4E->4ER
5E->5ER
6E->6ER
7E->7ER
8E->8ER
9E->9ER
*E->*ER
=E->=ER
.E->3ML 
0F->0FR -------------
1F->1FR kopiuj '4'
2F->2FR
3F->3FR
4F->4FR
5F->5FR
6F->6FR
7F->7FR
8F->8FR
9F->9FR
*F->*FR
=F->=FR
.F->4ML
0G->0GR -------------
1G->1GR kopiuj '5'
2G->2GR
3G->3GR
4G->4GR
5G->5GR
6G->6GR
7G->7GR
8G->8GR
9G->9GR
*G->*GR
=G->=GR
.G->5ML
0H->0HR -------------
1H->1HR kopiuj '6'
2H->2HR
3H->3HR
4H->4HR
5H->5HR
6H->6HR
7H->7HR
8H->8HR
9H->9HR
*H->*HR
=H->=HR
.H->6ML
0I->0IR -------------
1I->1IR kopiuj '7'
2I->2IR
3I->3IR
4I->4IR
5I->5IR
6I->6IR
7I->7IR
8I->8IR
9I->9IR
*I->*IR
=I->=IR
.I->7ML
0J->0JR -------------
1J->1JR kopiuj '8'
2J->2JR
3J->3JR
4J->4JR
5J->5JR
6J->6JR
7J->7JR
8J->8JR
9J->9JR
*J->*JR
=J->=JR
.J->8ML
0K->0KR -------------
1K->1KR kopiuj '9'
2K->2KR
3K->3KR
4K->4KR
5K->5KR
6K->6KR
7K->7KR
8K->8KR
9K->9KR
*K->*KR
=K->=KR
.K->9ML
0L->0LR -------------
1L->1LR kopiuj '*'
2L->2LR
3L->3LR
4L->4LR
5L->5LR
6L->6LR
7L->7LR
8L->8LR
9L->9LR
*L->*LR
=L->=LR
.L->*ML
0M->0ML -------------
1M->1ML  stan M to stan powracajacy do ostatniej nie skopiowanej cyfry
2M->2ML  jesli napotka juz skopiowana cyfre, (czyli zamieniona na znak) 
3M->3ML  przesuwa sie w prawo i powraca do stanu A co powoduje zapetlenie
4M->4ML  |-----
5M->5ML  dzialanie zapetli sie dopoki w stanie A nie napotka znaku '='
6M->6ML  zakonczy kopiowanie i przejdzie do stanu N   \/
7M->7ML
8M->8ML
9M->9ML
*M->*ML
=M->=ML
aM->aAR
bM->bAR
cM->cAR
dM->dAR
eM->eAR
fM->fAR
gM->gAR
hM->hAR
iM->iAR
jM->jAR
kM->kAR
aN->0NL -------------
bN->1NL stan N sluzy do zamieniania znakow spowrotem na cyfry
cN->2NL glowica przesuwa sie do konca, by sprawic aby wsszystko wrocilo do normy
dN->3NL po czym...
eN->4NL
fN->5NL
gN->6NL
hN->7NL
iN->8NL
jN->9NL
kN->*NL
.N->.OR przechodzi do stanu 'O'
0O->0OR by znow glowica przesunela sie na koniec...
1O->1OR
2O->2OR
3O->3OR
4O->4OR
5O->5OR
6O->6OR
7O->7OR
8O->8OR
9O->9OR
*O->*OR
xO->xOR
=O->=OR
.O->&PR ....przeszla w stan P, ale zanim przejdzie, to tylko dodaje znak & na koniec, sluzyc on bedzie za marker, odzielenie sekcji mnozenia od wyniku
.P->0RL <-to przejscie w ten stan sluzy by dodac '0' po '&', gdyz tutaj bedzie sie zbierac ew "Jeden dalej", tylko jedno miejsce wystarczy,
0R->0RL   na prawo od tego zera bedziemy wykonywac tak jakby mnozenie pisemne, tyle ze mnozyc bedziemy najpierw ze soba najbardziej znaczace
1R->1RL   potegi, z tym ze bedzie wykonywane w petli, kazde jedno przejscie mniejszej bedzie przenosilo wielokrotnie ta sama liczbe w to samo miejsce
2R->2RL   dodajac, i przy kazdym przejsciu odejmuje od drugiego mnoznika np:
3R->3RL   ...13*23&=0...
4R->4RL   ...13*13&=013.
5R->5RL   ...13*03&=026.
6R->6RL   ...13*02&=0273.   itd...
7R->7RL
8R->8RL   <-stan R szuka *
9R->9RL
*R->*SR   gdy juz mamy * zmniejszamy pierwsza cyfre po tym znaku, by ta liczba zadzialala tak jakby jako licznik, bedzie odejmowal sie tyle razy ile bedzie trzeba dodac cala liczbe przed * do wyniku
&R->&RL 
&S->&lL   <- ten warunek konkretny odbywa sie tylko w momencie gdy juz wszystkie cyfry po znaku * beda zamarkowane 'x'  i napotka od razu znak "&" wtedy od tego miejsca przystepujemy do formatowania wyniku ktory jest juz gotowy
0S->xVR   <- ten warunek skolei przechodzi do stanu ktory bedzie dodawal na sam koniec zero, zamarkuje zero 'x'-em by tak jakby przesunac miejsce dodawania o jedna potege, pozycje w prawo   
1S->0TL   ale tak poza tymi warunkami, inne w stanie S sluza tylko po to by odjac jeden od liczby po znaku *, pierwszej mozliwej cyfry ktora mozna odjac
2S->1TL
3S->2TL   
4S->3TL
5S->4TL   
6S->5TL
7S->6TL
8S->7TL
9S->8TL
xS->xSR  <- ignoruj 'x'-y
xT->xTL Stan T:
0T->0TL idziemy znow do = lub ost nieodwiedzanej cyfry
1T->1TL te cyfry nie odwiedzane to takie ktore nie sa tymczasowo zastapione znakiem
2T->2TL kazda cyfra z osobna ma swoj wlasny znak
3T->3TL
4T->4TL
5T->5TL
6T->6TL
7T->7TL
8T->8TL
9T->9TL
*T->*TL
=T->=UR Stan T ogolnie gdy napotka juz ten znak, zatrzymuje sie na pierwszej cyfrze ktora bedzie dodawac do wyniku, 
aT->aUR
bT->bUR
cT->cUR
dT->dUR
eT->eUR
fT->fUR
gT->gUR
hT->hUR
iT->iUR
jT->jUR jesli taka napotkamy zamieniamy ja na literke i odpowiedni jej stan
0U->aaR to przechodzimy w odpowiedni stan, kazda cyfra ma swoj odpowiedni stan, ktory przenosi dodaje po kolei kazda cyfre z liczby przed znakiem *
1U->bbR za znak &
2U->ccR dopoki nie napotka znaku * wtedy odejmuje znow pierwsza cyfre po znaku *, pierwsza mozliwa, odmarkowywuje wszystkie cyfry zamienione na znak
3U->ddR i znow dodaje jeszcze raz ta sama liczbe, w petli, dopoki nie odejmie wszystko z pierwszej cyfry po *, bo potem przesuwa dodawanie i odejmuje nastepna jesli taka jest
4U->eeR
5U->ffR
6U->ggR
7U->hhR
8U->iiR
9U->jjR 
*U->*ZL <- tu jest ten szczegolny przypadek, dodalismy raz liczbe na koncu, odmarkowywujemy, i robimy to jeszcze raz
0a->0aR ------
1a->1aR  kazdy z tych stanow, po kolei odpowiednio dla kazdej cyfry dodawania, ignoruje inne cyfry, dodaje do pierwszej napotkanej literki 
2a->2aR  pierwsza napotkana literka bedzie cyfra do ktorej nie dodano jeszcze cyfry, na samym koncu za znakiem, jest zamieniana na cyfre, 
3a->3aR  by nastepny stan mogl zignorowac ta cyfre
4a->4aR  po dodaniu przechodzi w stan X, lub W ktory dodaje jeszcze 1 na lewo od cyfry, to jest to tak zwane 'jeden dalej'
5a->5aR  
6a->6aR  0
7a->7aR
8a->8aR
9a->9aR
xa->xaR
*a->*aR
.a->0XL
aa->0XL
ba->1XL
ca->2XL
da->3XL
ea->4XL
fa->5XL
ga->6XL
ha->7XL
ia->8XL
ja->9XL
&a->&aR ------
0b->0bR ------
1b->1bR analogiczne dzialanie tak jak dla kazdej innej cyfry
2b->2bR
3b->3bR
4b->4bR
5b->5bR  1
6b->6bR
7b->7bR
8b->8bR
9b->9bR
xb->xbR
*b->*bR
.b->1XL
ab->1XL
bb->2XL
cb->3XL
db->4XL
eb->5XL
fb->6XL
gb->7XL
hb->8XL
ib->9XL
jb->0WL
&b->&bR ------
0c->0cR ------
1c->1cR
2c->2cR
3c->3cR
4c->4cR
5c->5cR  2
6c->6cR
7c->7cR
8c->8cR
9c->9cR
xc->xcR
*c->*cR
.c->2XL
ac->2XL
bc->3XL
cc->4XL
dc->5XL
ec->6XL
fc->7XL
gc->8XL
hc->9XL
ic->0WL
jc->1WL
&c->&cR ------
0d->0dR ------
1d->1dR
2d->2dR
3d->3dR
4d->4dR
5d->5dR  3
6d->6dR
7d->7dR
8d->8dR
9d->9dR
xd->xdR
*d->*dR
.d->3XL
ad->3XL
bd->4XL
cd->5XL
dd->6XL
ed->7XL
fd->8XL
gd->9XL
hd->0WL
id->1WL
jd->2WL
&d->&dR ------
0e->0eR ------
1e->1eR
2e->2eR
3e->3eR
4e->4eR
5e->5eR  4
6e->6eR
7e->7eR
8e->8eR
9e->9eR
xe->xeR
*e->*eR
.e->4XL
ae->4XL
be->5XL
ce->6XL
de->7XL
ee->8XL
fe->9XL
ge->0WL
he->1WL
ie->2WL
je->3WL
&e->&eR ------
0f->0fR ------
1f->1fR
2f->2fR
3f->3fR
4f->4fR
5f->5fR  5
6f->6fR
7f->7fR
8f->8fR
9f->9fR
xf->xfR
*f->*fR
.f->5XL
af->5XL
bf->6XL
cf->7XL
df->8XL
ef->9XL
ff->0WL
gf->1WL
hf->2WL
if->3WL
jf->4WL
&f->&fR ------
0g->0gR ------
1g->1gR
2g->2gR
3g->3gR
4g->4gR
5g->5gR  6
6g->6gR
7g->7gR
8g->8gR
9g->9gR
xg->xgR
*g->*gR
.g->6XL
ag->6XL
bg->7XL
cg->8XL
dg->9XL
eg->0WL
fg->1WL
gg->2WL
hg->3WL
ig->4WL
jg->5WL
&g->&gR ------
0h->0hR ------
1h->1hR
2h->2hR
3h->3hR
4h->4hR
5h->5hR  7
6h->6hR
7h->7hR
8h->8hR
9h->9hR
xh->xhR
*h->*hR
.h->7XL
ah->7XL
bh->8XL
ch->9XL
dh->0WL
eh->1WL
fh->2WL
gh->3WL
hh->4WL
ih->5WL
jh->6WL
&h->&hR ------
0i->0iR ------
1i->1iR
2i->2iR
3i->3iR
4i->4iR
5i->5iR  8
6i->6iR
7i->7iR
8i->8iR
9i->9iR
xi->xiR
*i->*iR
.i->8XL
ai->8XL
bi->9XL
ci->0WL
di->1WL
ei->2WL
fi->3WL
gi->4WL
hi->5WL
ii->6WL
ji->7WL
&i->&iR ------
0j->0jR ------
1j->1jR
2j->2jR
3j->3jR
4j->4jR
5j->5jR  9
6j->6jR
7j->7jR
8j->8jR
9j->9jR
xj->xjR
*j->*jR
.j->9XL
aj->9XL
bj->0WL
cj->1WL
dj->2WL
ej->3WL
fj->4WL
gj->5WL
hj->6WL
ij->7WL
jj->8WL
&j->&jR ------
aX->aXL Stan X pozwala nam uciec z wyniku za znak  specjalny &
bX->bXL 
cX->cXL
dX->dXL
eX->eXL
fX->fXL
gX->gXL
hX->hXL
iX->iXL
jX->jXL
0X->0XL
1X->1XL
2X->2XL
3X->3XL
4X->4XL
5X->5XL
6X->6XL
7X->7XL
8X->8XL
9X->9XL
&X->&TL <- mamy warunek dzieki ktoremy wszystko sie zapetla, przenosi kazda cyfre, dodaje, z osobna
xX->xXL
aZ->0QR stan Z to obrocenie jednej petli przepisywania
bZ->1QR w tym stanie akurat sprzata po pierwszym dodawaniu calej liczby przed * 
cZ->2QR
dZ->3QR
eZ->4QR
fZ->5QR
gZ->6QR
hZ->7QR
iZ->8QR
jZ->9QR
xZ->xZL
0Z->0ZL
1Z->1ZL
2Z->2ZL
3Z->3ZL
4Z->4ZL
5Z->5ZL
6Z->6ZL
7Z->7ZL
8Z->8ZL
9Z->9ZL
&Z->&ZL
*Z->*ZL
=Z->=zR  <-wyszczegolniony przypadek, stan male 'z' wraca do * gdy juz wszystkie znaki przetworzylismy, jest stan taki ktory mozemy wrocic do odejmowania kolejnej cyfry za znakiem *, i dodawania do wyniku kolejnej liczby w odpowiednie miejsce
xQ->xQR
0Q->0QR   Stan Q i Z maja za zadanie zamienic spowrotem na pojedynczo kazda literke na cyfre przed *, przy okazji zamieniajac ostatnie cyfry w wyniku na literki spowrotem
1Q->1QR   ten zabieg jest po to zeby okreslona ilosc cyfr ostatnich wyniku zamienic po to by nastepna petla dodawala w tym miejscu nastepna liczbe
2Q->2QR   mamy pewnosc ze przy bardzo dlugim wyniku doda nam akurat do ostatnich 3 cyfr wyniku, ilosc cyfr jest uzalezniona od tego ile cyfr ma liczba mnozaca
3Q->3QR   czyli ta przed znakiem *
4Q->4QR
5Q->5QR
6Q->6QR
7Q->7QR
8Q->8QR
9Q->9QR
=Q->=QR
*Q->*QR
&Q->&QR
.Q->.qL
aQ->aqL
bQ->bqL
cQ->cqL
dQ->dqL
eQ->eqL
fQ->fqL 
gQ->gqL
hQ->hqL
iQ->iqL
jQ->jqL
0q->aZL
1q->bZL stan q to taki stan przejsciowy, gdy napotkamy w stanie Q na pierwszy znak za & albo na '.', przerabiamy ostatnia cyfre na znak, tyle razy ile bedzie trzeba przerobic to przed znakiem* o czym bylo wspomniane
2q->cZL
3q->dZL
4q->eZL
5q->fZL
6q->gZL
7q->hZL
8q->iZL
9q->jZL
&q->kZL
*q->*qL
0z->0zR stan z to zakonczenie przetwarzania cyfr i znakow do stanu takiego by mozna by od nowa dodac kolejna liczbe
1z->1zR
2z->2zR
3z->3zR
4z->4zR
5z->5zR
6z->6zR
7z->7zR
8z->8zR 
9z->9zR
*z->*SR <- przechodzimy w tym stanie do * i znow przechodzimy do stanu S
.V->.vL
0V->0VR stan V to przesuniecie miejsca dodawania kolejnej jednostki
1V->1VR czyli dodajemy tak jakby na sam koniec wyniku 0 zamienione na a
2V->2VR
3V->3VR
4V->4VR
5V->5VR
6V->6VR
7V->7VR
8V->8VR
9V->9VR
&V->&VR
*V->*VR
aV->0vR stan v to stan przejsciowy V 
bV->1vR
cV->2vR
dV->3vR
eV->4vR
fV->5vR
gV->6vR
hV->7vR
iV->8vR
jV->9vR
av->avR
bv->bvR
cv->cvR
dv->dvR
ev->evR
fv->fvR
gv->gvR
hv->hvR
iv->ivR
jv->jvR
.v->apL <-wlasnie tutaj dodajemy zero na koniec
0p->0pL 
1p->1pL ewentualny stan p dzieki ktorym calkowicie powracamy do znaku * i znow wchodzimy stan dodawania S
2p->2pL
3p->3pL
4p->4pL
5p->5pL
6p->6pL
7p->7pL
8p->8pL
9p->9pL
ap->apL
bp->bpL
cp->cpL
dp->dpL
ep->epL
fp->fpL
gp->gpL
hp->hpL
ip->ipL
jp->jpL
xp->xpL
*p->*SR  
&p->&pL
0W->1XL stan W to tak jakby "jeden dalej" dodawania
1W->2XL przechodzi normalnie do stanu X, ten stan przechodzil kazdy stan dodajacy cyfre jesli nie trzeba bylo przenosic jedynki
2W->3XL
3W->4XL
4W->5XL
5W->6XL
6W->7XL
7W->8XL
8W->9XL
9W->0WL <----Formatowanie wyniku----->
0l->xlL 
1l->xlL w tym miejcu zaczyna sie przesuwanie cyfr wyniku do znaku rowna sie
2l->xlL musmy usunac zbedne zero na samym koncu wyniku, ktore jest efektem ubocznym
3l->xlL oraz usunac ewentualne zero na samym poczatku 
4l->xlL 
5l->xlL na poczatek w stanie l zamieniamy pierwszy znak na 'x' i przechodzimy do L
6l->xlL 
7l->xlL
8l->xlL
9l->xlL
*l->xlL
xl->xlL
=l->=-R
x-->xkR
xk->-kR stan k zamienia wszystkie ew litery na cyfry
ak->0kR 
bk->1kR
ck->2kR
dk->3kR
ek->4kR
fk->5kR
gk->6kR
hk->7kR
ik->8kR
jk->9kR
0k->0kR przesuwanie, ignorowanie cyfr
1k->1kR
2k->2kR
3k->3kR
4k->4kR
5k->5kR
6k->6kR
7k->7kR
8k->8kR
9k->9kR
&k->-kR
.k->.wL jeden stan usuwajacy ostatnia cyfre gdyz jest efektem ubocznym innego stanu
0w->.mL czyli stan w
1w->.mL
2w->.mL
3w->.mL
4w->.mL
5w->.mL
6w->.mL
7w->.mL
8w->.mL
9w->.mL
0m->0mL stan m powracamy na poczatek wyniku
1m->1mL
2m->2mL
3m->3mL
4m->4mL
5m->5mL
6m->6mL
7m->7mL
8m->8mL
9m->9mL
-m->-nR
0n->-nR stan n usuwa ewentualne zero przed wynikiem i wprowadza w petle przesuwajaca
1n->-1L 
2n->-2L
3n->-3L
4n->-4L
5n->-5L
6n->-6L
7n->-7L
8n->-8L
9n->-9L
-0->-0L
x0->0)R stany - i x ktore przesuwaja na lewo kazda cyfre z osobna, do miejsca x, ignorujac znaki '-'
-1->-1L
x1->1)R
-2->-2L
x2->2)R
-3->-3L
x3->3)R
-4->-4L
x4->4)R
-5->-5L
x5->5)R
-6->-6L
x6->6)R
-7->-7L
x7->7)R
-8->-8L
x8->8)R
-9->-9L
x9->9)R
-)->x(R
.(->.%L po czym w tych stanach wstawia cyfre, potem x, jedno i znow kopiuje kojena cyfre z wyniku, zapetlujac sie
-(->-(R
0(->-0L
1(->-1L
2(->-2L
3(->-3L
4(->-4L
5(->-5L
6(->-6L
7(->-7L
8(->-8L
9(->-9L
0)->-0L
1)->-1L
2)->-2L
3)->-3L
4)->-4L
5)->-5L
6)->-6L
7)->-7L
8)->-8L
9)->-9L
-%->.%L ostatnie stany ktore usuwaja wszystkie - i x sluzace po to aby odnalesc miejsce wstawienia kolejnej cyfry, 
x%->.%L w ten stan (%) przechodzi petla dopiero wtedy gdy napotka znak '.' dlatego byl potrzebny jeszcze jeden znak, by stan ( rozroznial koniec od przestrzeni miedzy kopiujacymi cyframi..